# coding=utf-8
from evdev import AbsInfo, ecodes as e
import RPi.GPIO as GPIO

#Pi Zero, 1, 2, OR 3 - (Versions A+/B+)
AVAILABLE_PINS = (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)

#Pi 1 (Versions A/B)
if GPIO.RPI_INFO['P1_REVISION'] < 3:
	AVAILABLE_PINS = (2,3,4,7,8,9,10,11,14,15,17,18,22,23,24,25,27)

AVAILABLE_PINS_STRING = ', '.join(map(str, AVAILABLE_PINS))

JOYSTICK_AXIS = AbsInfo(
										value = 0,
										min = -255,
										max = 255,
										fuzz = 0,
										flat = 15,
										resolution = 0
									)

DEVICE_LIST = [
					'Joypad 1',
					'Joypad 2',
					'Joypad 3',
					'Joypad 4',
					'Keyboard',
					'Commands'
					]

BUTTON_LIST =[
	('Start Button', e.BTN_START),
	('Select Button', e.BTN_SELECT),
	('Button A', e.BTN_A),
	('Button B', e.BTN_B),
	('Button C', e.BTN_C),
	('Button X', e.BTN_X),
	('Button Y', e.BTN_Y),
	('Button Z', e.BTN_Z),
	('Button Left Trigger 1', e.BTN_TL),
	('Button Right Trigger 1', e.BTN_TR),
	('Button Left Trigger 2', e.BTN_TL2),
	('Button Right Trigger 2', e.BTN_TR2),
	('Button Generic 1', e.BTN_TRIGGER_HAPPY2),
	('Button Generic 2', e.BTN_TRIGGER_HAPPY3),
	('Button Generic 3', e.BTN_TRIGGER_HAPPY4),
	('Button Generic 4', e.BTN_TRIGGER_HAPPY5),
	('Button Generic 5', e.BTN_TRIGGER_HAPPY6),
	('Button Generic 6', e.BTN_TRIGGER_HAPPY7),
	('Button Generic 7', e.BTN_TRIGGER_HAPPY8),
	('Button Generic 8', e.BTN_TRIGGER_HAPPY9),
	('Button Generic 9', e.BTN_TRIGGER_HAPPY10),
	('Button Generic 10', e.BTN_TRIGGER_HAPPY11),
	('Button Generic 11', e.BTN_TRIGGER_HAPPY12),
	('Button Generic 12', e.BTN_TRIGGER_HAPPY13),
	('Button Generic 13', e.BTN_TRIGGER_HAPPY14),
	('Button Generic 14', e.BTN_TRIGGER_HAPPY15),
	('Button Generic 15', e.BTN_TRIGGER_HAPPY16),
	('Button Generic 16', e.BTN_TRIGGER_HAPPY17),
	('Button Generic 17', e.BTN_TRIGGER_HAPPY18),
	('Button Generic 18', e.BTN_TRIGGER_HAPPY19),
	('Button Generic 19', e.BTN_TRIGGER_HAPPY20),
	('Button Generic 20', e.BTN_TRIGGER_HAPPY21),
	('Button Generic 21', e.BTN_TRIGGER_HAPPY22),
	('Button Generic 22', e.BTN_TRIGGER_HAPPY23),
	('Button Generic 23', e.BTN_TRIGGER_HAPPY24) ]

ALL_JOYSTICK_BUTTONS = [
	e.BTN_JOYSTICK,
	e.BTN_THUMB,
	e.BTN_THUMB2,
	e.BTN_TOP,
	e.BTN_TOP2,
	e.BTN_PINKIE,
	e.BTN_BASE,
	e.BTN_BASE2,
	e.BTN_BASE3,
	e.BTN_BASE4,
	e.BTN_BASE5,
	e.BTN_BASE6,
	e.BTN_DEAD,
	e.BTN_A,
	e.BTN_B,
	e.BTN_C,
	e.BTN_X,
	e.BTN_Y,
	e.BTN_Z,
	e.BTN_TL,
	e.BTN_TR,
	e.BTN_TL2,
	e.BTN_TR2,
	e.BTN_SELECT,
	e.BTN_START,
	e.BTN_MODE,
	e.BTN_THUMBL,
	e.BTN_THUMBR,
	e.BTN_TRIGGER_HAPPY2,
	e.BTN_TRIGGER_HAPPY3,
	e.BTN_TRIGGER_HAPPY4,
	e.BTN_TRIGGER_HAPPY5,
	e.BTN_TRIGGER_HAPPY6,
	e.BTN_TRIGGER_HAPPY7,
	e.BTN_TRIGGER_HAPPY8,
	e.BTN_TRIGGER_HAPPY9,
	e.BTN_TRIGGER_HAPPY10,
	e.BTN_TRIGGER_HAPPY11,
	e.BTN_TRIGGER_HAPPY12,
	e.BTN_TRIGGER_HAPPY13,
	e.BTN_TRIGGER_HAPPY14,
	e.BTN_TRIGGER_HAPPY15,
	e.BTN_TRIGGER_HAPPY16,
	e.BTN_TRIGGER_HAPPY17,
	e.BTN_TRIGGER_HAPPY18,
	e.BTN_TRIGGER_HAPPY19,
	e.BTN_TRIGGER_HAPPY20,
	e.BTN_TRIGGER_HAPPY21,
	e.BTN_TRIGGER_HAPPY22,
	e.BTN_TRIGGER_HAPPY23,
	e.BTN_TRIGGER_HAPPY24,
	e.BTN_TRIGGER_HAPPY25,
	e.BTN_TRIGGER_HAPPY26,
	e.BTN_TRIGGER_HAPPY27,
	e.BTN_TRIGGER_HAPPY28,
	e.BTN_TRIGGER_HAPPY29,
	e.BTN_TRIGGER_HAPPY30,
	e.BTN_TRIGGER_HAPPY31,
	e.BTN_TRIGGER_HAPPY32,
	e.BTN_TRIGGER_HAPPY33,
	e.BTN_TRIGGER_HAPPY34,
	e.BTN_TRIGGER_HAPPY35,
	e.BTN_TRIGGER_HAPPY36,
	e.BTN_TRIGGER_HAPPY37,
	e.BTN_TRIGGER_HAPPY38,
	e.BTN_TRIGGER_HAPPY39,
	e.BTN_TRIGGER_HAPPY40]

KEY_LIST = [
	('↑ UP', e.KEY_UP),
	('↓ DOWN', e.KEY_DOWN),
	('← LEFT', e.KEY_LEFT),
	('→ RIGHT', e.KEY_RIGHT),
	('ENTER', e.KEY_ENTER),
	('SPACEBAR', e.KEY_SPACE),
	('LEFT-ALT', e.KEY_LEFTALT),
	('LEFT-CTRL', e.KEY_LEFTCTRL),
	('LEFT-SHIFT', e.KEY_LEFTSHIFT),
	('RIGHT-ALT', e.KEY_RIGHTALT),
	('RIGHT-CTRL', e.KEY_RIGHTCTRL),
	('RIGHT-SHIFT', e.KEY_RIGHTSHIFT),
	('TAB', e.KEY_TAB),
	('A', e.KEY_A),
	('B', e.KEY_B),
	('C', e.KEY_C),
	('D', e.KEY_D),
	('E', e.KEY_E),
	('F', e.KEY_F),
	('G', e.KEY_G),
	('H', e.KEY_H),
	('I', e.KEY_I),
	('J', e.KEY_J),
	('K', e.KEY_K),
	('L', e.KEY_L),
	('M', e.KEY_M),
	('N', e.KEY_N),
	('O', e.KEY_O),
	('P', e.KEY_P),
	('Q', e.KEY_Q),
	('R', e.KEY_R),
	('S', e.KEY_S),
	('T', e.KEY_T),
	('U', e.KEY_U),
	('V', e.KEY_V),
	('W', e.KEY_W),
	('X', e.KEY_X),
	('Y', e.KEY_Y),
	('Z', e.KEY_Z),
	('0', e.KEY_0),
	('1', e.KEY_1),
	('2', e.KEY_2),
	('3', e.KEY_3),
	('4', e.KEY_4),
	('5', e.KEY_5),
	('6', e.KEY_6),
	('7', e.KEY_7),
	('8', e.KEY_8),
	('9', e.KEY_9),
	('- MINUS', e.KEY_MINUS),
	('\' APOSTROPHE', e.KEY_APOSTROPHE),
	('\ BACKSLASH', e.KEY_BACKSLASH),
	('← BACKSPACE', e.KEY_BACKSPACE),
	('CAPSLOCK', e.KEY_CAPSLOCK),
	(', COMMA', e.KEY_COMMA),
	('DELETE', e.KEY_DELETE),
	('. DOT', e.KEY_DOT),
	('END', e.KEY_END),
	('= EQUAL', e.KEY_EQUAL),
	('ESC', e.KEY_ESC),
	('F1', e.KEY_F1),
	('F2', e.KEY_F2),
	('F3', e.KEY_F3),
	('F4', e.KEY_F4),
	('F5', e.KEY_F5),
	('F6', e.KEY_F6),
	('F7', e.KEY_F7),
	('F8', e.KEY_F8),
	('F9', e.KEY_F9),
	('F10', e.KEY_F10),
	('F11', e.KEY_F11),
	('F12', e.KEY_F12),
	('` GRAVE', e.KEY_GRAVE),
	('HOME', e.KEY_HOME),
	('INSERT', e.KEY_INSERT),
	('KEYPAD 0', e.KEY_KP0),
	('KEYPAD 1', e.KEY_KP1),
	('KEYPAD 2', e.KEY_KP2),
	('KEYPAD 3', e.KEY_KP3),
	('KEYPAD 4', e.KEY_KP4),
	('KEYPAD 5', e.KEY_KP5),
	('KEYPAD 6', e.KEY_KP6),
	('KEYPAD 7', e.KEY_KP7),
	('KEYPAD 8', e.KEY_KP8),
	('KEYPAD 9', e.KEY_KP9),
	('* KEYPAD ASTERISK', e.KEY_KPASTERISK),
	('KEYPAD ENTER', e.KEY_KPENTER),
	('= KEYPAD EQUAL', e.KEY_KPEQUAL),
	('- KEYPAD MINUS', e.KEY_KPMINUS),
	('+ KEYPAD PLUS', e.KEY_KPPLUS),
	('KPPLUSMINUS', e.KEY_KPPLUSMINUS),
	('[ LEFTBRACE', e.KEY_LEFTBRACE),
	('] RIGHTBRACE', e.KEY_RIGHTBRACE),
	('PAGEDOWN', e.KEY_PAGEDOWN),
	('PAGEUP', e.KEY_PAGEUP),
	('SCROLLLOCK', e.KEY_SCROLLLOCK),
	('; SEMICOLON', e.KEY_SEMICOLON),
	('/ SLASH', e.KEY_SLASH),
]
